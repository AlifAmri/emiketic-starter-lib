{"version":3,"sources":["../../src/redux/state.helper.js"],"names":["createSimpleOperation","createAction","createAsyncOperation","createIndexMetaActions","module","name","ACTION","perform","payload","type","console","warn","prefix","REQUEST","SUCCESS","FAILURE","request","input","success","output","dispatch","failure","error","INDEX_PAGE_SIZE_DEFAULT","substate","actionType","defaults","$reset","meta","filter","sort","page","pageSize","$filter","$sort","$pageSize","$page","getState","pageTotal"],"mappings":"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","file":"state.helper.js","sourcesContent":["/**\n * Action creator factory for simple operation\n */\n\nexport function createSimpleOperation(module, name) {\n  const ACTION = `${module}_${name}`;\n\n  return {\n    module,\n\n    name,\n\n    ACTION,\n\n    perform(payload = {}) {\n      return {\n        type: ACTION,\n        ...payload,\n      };\n    },\n  };\n}\n\nexport function createAction(module, name) {\n  console.warn('createAction it deprecated, use createSimpleOperation instead');\n\n  return createSimpleOperation(module, name);\n}\n\n/**\n * Action creators factory for typical async operation\n */\n\nexport function createAsyncOperation(module, name) {\n  const prefix = `${module}_${name}`;\n\n  const REQUEST = `${prefix}_REQUEST`;\n  const SUCCESS = `${prefix}_SUCCESS`;\n  const FAILURE = `${prefix}_FAILURE`;\n\n  return {\n    module,\n\n    name,\n\n    REQUEST,\n\n    request(input = {}) {\n      return {\n        type: REQUEST,\n        ...input,\n      };\n    },\n\n    SUCCESS,\n\n    success(output = {}) {\n      return (dispatch) => {\n        dispatch({\n          type: SUCCESS,\n          ...output,\n        });\n\n        return output;\n      };\n    },\n\n    FAILURE,\n\n    failure(error) {\n      return (dispatch) => {\n        dispatch({\n          type: FAILURE,\n        });\n\n        throw error;\n      };\n    },\n  };\n}\n\n/**\n * Action creators makers for typical index view\n */\n\nconst INDEX_PAGE_SIZE_DEFAULT = 50;\n\nexport function createIndexMetaActions(substate, actionType, defaults = {}) {\n  function $reset() {\n    return {\n      type: actionType,\n      meta: {\n        filter: defaults.filter || '',\n        sort: defaults.sort || '',\n        page: 1,\n        pageSize: defaults.pageSize || INDEX_PAGE_SIZE_DEFAULT,\n      },\n    };\n  }\n\n  function $filter(filter = '') {\n    return {\n      type: actionType,\n      meta: {\n        filter,\n        page: 1,\n      },\n    };\n  }\n\n  function $sort(sort = '') {\n    return {\n      type: actionType,\n      meta: {\n        sort,\n        page: 1,\n      },\n    };\n  }\n\n  function $pageSize(pageSize = INDEX_PAGE_SIZE_DEFAULT) {\n    if (pageSize < 1) {\n      pageSize = 10;\n    }\n\n    if (pageSize > 100) {\n      pageSize = 100;\n    }\n\n    return {\n      type: actionType,\n      meta: {\n        pageSize,\n        page: 1,\n      },\n    };\n  }\n\n  function $page(page = 1) {\n    return (dispatch, getState) => {\n      const { meta } = getState()[substate];\n\n      if (page < 1) {\n        page = 1;\n      }\n\n      if (page > meta.pageTotal) {\n        page = meta.pageTotal - 1;\n      }\n\n      dispatch({\n        type: actionType,\n        meta: {\n          page,\n        },\n      });\n    };\n  }\n\n  return {\n    $reset,\n    $filter,\n    $sort,\n    $pageSize,\n    $page,\n  };\n}\n"]}