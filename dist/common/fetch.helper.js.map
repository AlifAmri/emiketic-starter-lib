{"version":3,"sources":["../../src/common/fetch.helper.js"],"names":["encode","toQueryString","toFormData","Request","ResponseHandler","ErrorValueHandler","ErrorHandler","Logger","result","name","value","mode","File","Date","toJSON","JSON","parse","Array","isArray","forEach","val","index","Object","keys","key","encodeURIComponent","String","data","outcome","map","join","FormData","append","method","url","options","route","query","headers","body","more","entries","param","replace","RegExp","queryString","Accept","stringify","request","global","events","EventEmitter","response","successModifier","payload","failureModifier","error","content","contentType","get","Promise","resolve","startsWith","json","text","then","ok","code","message","extra","status","FetchError","from","emit","catch","_error","reject","process","env","NODE_ENV","FetchHelper","module","exports","on","debug"],"mappings":"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","file":"fetch.helper.js","sourcesContent":["import { EventEmitter } from './events';\n\nimport { FetchError } from './error';\n\nimport { createLogger } from './logger';\n\nconst Logger = createLogger('FetchHelper');\n\n/**\n * Query String and Form Data\n */\n\nexport function encode(result, name, value, mode = 'querystring') {\n  if (typeof value === 'object' && value) {\n    if (value instanceof File) {\n      if (mode === 'formdata') {\n        result[name] = value;\n      } else if (mode === 'querystring') {\n        // result[name] = new FileReader().readAsDataURL(value);\n      }\n    } else if (value instanceof Date) {\n      result[name] = value.toJSON();\n    } else if (typeof value.toJSON === 'function') {\n      encode(result, name, JSON.parse(value.toJSON()), mode);\n    } else if (Array.isArray(value)) {\n      value.forEach((val, index) => encode(result, `${name}[${index}]`, val, mode));\n    } else {\n      Object.keys(value).forEach((key) => encode(result, `${name}[${encodeURIComponent(key)}]`, value[key], mode));\n    }\n  } else {\n    result[name] = encodeURIComponent(String(value));\n  }\n}\n\nexport function toQueryString(data) {\n  const result = {};\n  Object.keys(data).forEach((key) => encode(result, encodeURIComponent(key), data[key], 'querystring'));\n  const outcome = Object.keys(result)\n    .map((key) => `${key}=${result[key]}`)\n    .join('&');\n  return outcome;\n}\n\nexport function toFormData(data) {\n  const result = {};\n  Object.keys(data).forEach((key) => encode(result, encodeURIComponent(key), data[key], 'formdata'));\n  const outcome = new FormData();\n  Object.keys(result).forEach((key) => outcome.append(key, result[key]));\n  return outcome;\n}\n\nexport function Request(method, url, options = {}) {\n  let {\n    route, query, headers, body, ...more\n  } = options;\n\n  route = route || {};\n  query = query || {};\n  headers = headers || {};\n\n  Object.entries(route).forEach(([param, value]) => {\n    url = url.replace(new RegExp(`:${param}`), encodeURIComponent(value));\n  });\n\n  const queryString = toQueryString(query);\n\n  url += queryString ? `?${queryString}` : '';\n\n  headers.Accept = 'application/json';\n\n  if (body && typeof body === 'object') {\n    if (body instanceof FormData) {\n      headers['Content-Type'] = 'multipart/form-data';\n    } else {\n      headers['Content-Type'] = 'application/json';\n      body = JSON.stringify(body);\n    }\n  }\n\n  const request = new global.Request(url, {\n    method,\n    headers,\n    body,\n    ...more,\n  });\n\n  return request;\n}\n\n/**\n * Response Listeners\n */\n\nexport const events = new EventEmitter();\n\n/**\n * Response Handler\n * Converts JSON to Object and throws error for non-success statuses\n */\n\nexport function ResponseHandler(\n  response,\n  successModifier = (payload, response) => payload,\n  failureModifier = (error, response) => error,\n) {\n  let content;\n\n  const contentType = response.headers.get('Content-Type', '');\n\n  if (contentType === null) {\n    content = Promise.resolve(null);\n  } else if (contentType.startsWith('application/json')) {\n    content = response.json();\n  } else {\n    content = response.text().then((text) => ({ text }));\n  }\n\n  return content\n    .then((payload) => {\n      payload = payload || {};\n\n      let error = null;\n\n      if (payload.error && typeof payload.error === 'object') {\n        error = payload.error;\n      }\n\n      if (error || !response.ok) {\n        error = error || payload;\n\n        let { code, message, ...extra } = error;\n\n        if (typeof payload.error === 'string') {\n          message = message || payload.error;\n        }\n\n        if (response.status === 400) {\n          code = code || 'Invalid';\n          message = message || 'Invalid request';\n        } else if (response.status === 401) {\n          code = code || 'Unauthenticated';\n          message = message || 'Unauthenticated';\n        } else if (response.status === 403) {\n          code = code || 'Unauthorized';\n          message = message || 'Unauthorized';\n        } else if (response.status === 404) {\n          code = code || 'NotFound';\n          message = message || 'Not found';\n        } else if (response.status >= 500) {\n          code = code || 'Server';\n          message = message || 'Server error';\n        } else {\n          code = code || 'Unknown';\n          message = message || 'Unknown error';\n        }\n\n        error = FetchError.from(error, { code, message, ...extra });\n\n        error = failureModifier(error, response);\n\n        throw error;\n      }\n\n      payload = successModifier(payload, response);\n\n      events.emit('success', payload, response);\n\n      return payload;\n    })\n    .catch((error) => {\n      events.emit('failure', error, response);\n\n      throw FetchError.from(error);\n    });\n}\n\nexport function ErrorValueHandler(_error, failureModifier = (error, response) => error) {\n  let code = _error.code;\n  let message = _error.message || _error.error;\n\n  code = code || 'Unknown';\n  message = message || 'Unknown error';\n\n  let error = FetchError.from(_error, { code, message });\n\n  const response = {};\n\n  error = failureModifier(error, response);\n\n  events.emit('failure', error, response);\n\n  return error;\n}\n\nexport function ErrorHandler(_error, failureModifier) {\n  return Promise.reject(ErrorValueHandler(_error, failureModifier));\n}\n\nif (process.env.NODE_ENV === 'development') {\n  global.FetchHelper = module.exports;\n\n  events.on('success', (payload, response) => {\n    Logger.debug('@success', response.url, response.status, payload);\n  });\n\n  events.on('failure', (error, response) => {\n    Logger.debug('@failure', response.url, response.status, error.code, error, error.extra);\n  });\n}\n"]}